// @/app/@right/(_PRIVAT_ROUTES)/admin/(_routing)/pages/[slug]/(_service)/(_config)/step-completion-config.ts

import { PageData } from "@/app/@right/(_service)/(_types)/page-types";
import { AdminPageTab } from "../(_context)/admin-pages-nav-context";

/**
 * Interface for step completion validation logic
 */
export interface StepCompletionCondition {
  stepKey: AdminPageTab;
  validate: (pageData: PageData | null) => boolean;
  description: string;
  debugInfo?: (pageData: PageData | null) => string;
}

/**
 * ‚úÖ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø: –£—Å–ª–æ–≤–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
 */
export const STEP_COMPLETION_CONDITIONS: StepCompletionCondition[] = [
  {
    stepKey: "step1",
    validate: (pageData: PageData | null) => {
      // Step 1: Competitor Analysis - –∑–∞–≤–µ—Ä—à–µ–Ω –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
      return (pageData?.competitorAnalysis?.length ?? 0) > 0;
    },
    description: "–¢—Ä–µ–±—É–µ—Ç —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤",
    debugInfo: (pageData) =>
      `üéØ –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: ${pageData?.competitorAnalysis?.length ?? 0}`,
  },

  {
    stepKey: "step2",
    validate: (pageData: PageData | null) => {
      // Step 2: Load Analysis Results - –∑–∞–≤–µ—Ä—à–µ–Ω –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
      return (
        pageData?.competitorAnalysis?.some(
          (analysis) => analysis.isAnalyzed === true
        ) ?? false
      );
    },
    description: "–¢—Ä–µ–±—É–µ—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞",
    debugInfo: (pageData) => {
      const analyzedCount =
        pageData?.competitorAnalysis?.filter((a) => a.isAnalyzed).length ?? 0;
      const totalCount = pageData?.competitorAnalysis?.length ?? 0;
      return `üîç –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${analyzedCount}/${totalCount}`;
    },
  },

  {
    stepKey: "step5",
    validate: (pageData: PageData | null) => {
      // Step 5: Generator perplexity prompt
      return (
        (pageData?.isReadyPromptForPerplexity !== undefined &&
          pageData?.isReadyPromptForPerplexity !== false) ||
        (pageData?.draftContentStructure?.length ?? 0) > 0
      );
    },
    description: "–¢—Ä–µ–±—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Perplexity prompt",
    debugInfo: (pageData) =>
      `üìù Perplexity prompt: ${pageData?.isReadyPromptForPerplexity ? "–ï—Å—Ç—å" : "–ù–µ—Ç"}`,
  },

  {
    stepKey: "step6",
    validate: (pageData: PageData | null) => {
      // Step 6:
      return (pageData?.draftContentStructure?.length ?? 0) > 0;
    },
    description: "–¢—Ä–µ–±—É–µ—Ç draftContentStructure lenght > 0",
    debugInfo: (pageData) =>
      `üìã –ß–µ—Ä–Ω–æ–≤–∏–∫: ${pageData?.draftContentStructure?.length ?? 0}`,
  },
  {
    stepKey: "step7",
    validate: (pageData: PageData | null) => {
      // Step 7
      return (
        pageData?.isReadyDraftForPerplexity !== undefined &&
        pageData?.isReadyDraftForPerplexity !== false
      );
    },
    description: "–¢—Ä–µ–±—É–µ—Ç finish draft structer items chek",
    debugInfo: (pageData) =>
      `üìù isReadyDraftForPerplexity: ${pageData?.isReadyDraftForPerplexity ? "–ï—Å—Ç—å" : "–ù–µ—Ç"}`,
  },
  // sections
  {
    stepKey: "step8",
    validate: (pageData: PageData | null) => {
      // Step 6:
      return (pageData?.sections?.length ?? 0) > 0;
    },
    description: "–¢—Ä–µ–±—É–µ—Ç sections lenght > 0",
    debugInfo: (pageData) => `üìã –ß–µ—Ä–Ω–æ–≤–∏–∫: ${pageData?.sections?.length ?? 0}`,
  },

  {
    stepKey: "preview",
    validate: (pageData: PageData | null) => {
      // Step 12: Generator isPreviewComplited 
      return (
        (pageData?.isPreviewComplited !== undefined &&
          pageData?.isPreviewComplited !== false) 
      );
    },
    description: "–¢—Ä–µ–±—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ isPreviewComplited ",
    debugInfo: (pageData) =>
      `üìù Perplexity prompt: ${pageData?.isPreviewComplited  ? "–ï—Å—Ç—å" : "–ù–µ—Ç"}`,
  },
];

/**
 * ‚úÖ –§–£–ù–ö–¶–ò–Ø: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —à–∞–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */
export const getAllCompletedSteps = (
  pageData: PageData | null
): AdminPageTab[] => {
  if (!pageData) {
    console.log("üé≠ No page data - no completed steps");
    return [];
  }

  const completedSteps = STEP_COMPLETION_CONDITIONS.filter((condition) => {
    try {
      return condition.validate(pageData);
    } catch (error) {
      console.error(`Error validating step ${condition.stepKey}:`, error);
      return false;
    }
  }).map((condition) => condition.stepKey);

  if (process.env.NODE_ENV === "development") {
    console.log("üé≠ Completed steps computed:", completedSteps);
  }

  return completedSteps;
};

/**
 * ‚úÖ –§–£–ù–ö–¶–ò–Ø: –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤—Å–µ—Ö —à–∞–≥–æ–≤
 */
export const getStepsDebugInfo = (
  pageData: PageData | null
): Record<AdminPageTab, string> => {
  const debugInfo: Partial<Record<AdminPageTab, string>> = {};

  STEP_COMPLETION_CONDITIONS.forEach((condition) => {
    const info = condition.debugInfo?.(pageData) || "No debug info";
    const status = condition.validate(pageData)
      ? "–ó–ê–í–ï–†–®–ï–ù ‚úÖ"
      : "–ù–ï –ó–ê–í–ï–†–®–ï–ù ‚è≥";
    debugInfo[condition.stepKey] = `${status} - ${info}`;
  });

  return debugInfo as Record<AdminPageTab, string>;
};
